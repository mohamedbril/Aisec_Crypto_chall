#!/usr/bin/env python
# coding: utf-8

# In[1]:


from Crypto.Util.number import *


# In[2]:


proof.arithmetic(False)


# In[24]:


n = 1517676084324935047250463232293323820757236541685404860271352980831457752301234403713030608517883477629524168833693300406385589691609019437751990749436988799785048335458644163602268343031035231792653929434524342369367421993232016964552517370281652072900239222879415327197076148703704462829000670006208699536900912013712261396123316989491826581880634232977146220648416947789682459872682415741269775988575962448467591273022886693490445584244527704090572282660615623
xx,yy = (267784920022868591833620874356944773184370971099350492812931110532796670038750622973592309158553898236050753613006259817003321128267190937231075225428482364063793962931296394534795587418577487792166028380509543304951530682412918169589310344800089158775534787072860169533188102805284677340400374899261581720909024338115245568486337158288746875063360950591137078765346051007000445286867347311301305597750421343226149574612205794110417332827323365321989967074657250, 1127553155471737487943624116891439110209301194052080069013578815888565022371837002367379631607368826186919109121794890693211087950601441474358140302932286285574862033897263763060000753983180983173709196238485475729221468058459733839471563461749490571049633897739392047551032984456180546763928804801125189768409994126755932037249578882441472112058849530378758057428438070380738205407723543637735092146321103399896311505740876503158535689463192772806749061236181884)


# In[25]:


e=0x10001


# In[26]:


r = ZZ((yy ^ 2 - xx ^ 3) % n)
P = PolynomialRing(Zmod(n), "q")
q = P.gen()
f = r - q
q = ZZ(f.monic().small_roots(X=2 ^ 512, epsilon=0.8, beta=0.66)[0])
p = n // q
assert p * q == n

print((log(p) / log(n)).n())


# In[27]:


E = EllipticCurve(Zmod(n), [p, q])

phi = E.change_ring(GF(p)).order() * E.change_ring(GF(q)).order()
d = inverse_mod(e, phi)
x, y = (d * E(xx, yy)).xy()


# In[28]:


print(long_to_bytes(int(x)))


# In[ ]:




